<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Virtual Qutrits and String Theory</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f0f0f0;
            font-family: Times, sans-serif;
        }

        #dieGrid {
            position: relative;
            width: 300px;
            height: 300px;
            margin-top: 20px;
        }

        .dieResult {
            position: absolute;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            text-align: center;
            line-height: 20px;
            font-weight: bold;
            color: white;
        }

        .dieResult.H { background-color: #ff4444; }
        .dieResult.ùïè { background-color: #44ff44; }
        .dieResult.+ { background-color: #4444ff; }

        @keyframes orbit {
            0% { transform: rotate(0deg) translateX(120px); }
            100% { transform: rotate(360deg) translateX(120px); }
        }

        .dieResult {
            animation: orbit 10s linear infinite;
            animation-delay: calc(-0.025s * var(--i));
        }

        .content {
            text-align: center;
            max-width: 600px;
            margin: 0 auto;
        }

        .content h1 {
            margin-bottom: 10px;
        }

        .content p {
            text-align: left;
        }
    </style>
</head>
<body>
    <div class="content">
        <h1>Understanding Virtual Qutrits in String Theory</h1>
        <p>
            String theory is a theoretical framework in physics that attempts to reconcile general relativity with quantum mechanics. It suggests that elementary particles are one-dimensional "strings" that can vibrate at different frequencies. The concept of "looped strings" is particularly intriguing when considering virtual particles in quantum field theory. These particles briefly pop into and out of existence, representing transient states of string vibrations. M-theory, a unifying theory for various string theories, extends this idea to higher-dimensional membranes vibrating in an 11-dimensional spacetime. The virtual nature of these strings or membranes represents a dynamic and interconnected model of the universe's fundamental nature.
        </p>
    </div>
    <figure id="dieGrid">
    </figure>
    <script>
        const quantum = {
            getRandom: function(min, mid, max) {
                if (typeof min !== "number" || typeof mid !== "number" || typeof max !== "number") {
                    throw new Error("min, mid, and max must be numbers");
                }
                if (min >= mid || mid >= max) {
                    throw new Error("Values must be in order: min < mid < max");
                }

                const buffer = new Uint32Array(1);
                window.crypto.getRandomValues(buffer);
                const normalizedRandom = buffer[0] / (0xFFFFFFFF + 1); 

                if (normalizedRandom < 0.33) {
                    return this.cryptoRandom(min, mid);
                } else if (normalizedRandom < 0.67) {
                    return this.cryptoRandom(mid, max);
                } else {
                    return this.cryptoRandom(max, max + (max - mid));
                }
            },
            cryptoRandom: function(min, max) {
                const range = max - min;
                const buffer = new Uint32Array(1);
                window.crypto.getRandomValues(buffer);
                return (buffer[0] / (0xFFFFFFFF + 1)) * range + min;
            }
        };

        function rollQuantumDie() {
            let dieGrid = document.getElementById('dieGrid');
            dieGrid.innerHTML = '';

            for (let i = 0; i < 4000; i++) {
                let outcome = quantumDieOutcome();
                let resultSpan = document.createElement('span');
                resultSpan.classList.add('dieResult', outcome);
                resultSpan.style.setProperty('--i', i);
                resultSpan.textContent = outcome;
                dieGrid.appendChild(resultSpan);
            }
        }

        function quantumDieOutcome() {
            const result = quantum.getRandom(0, 1, 2);
            if (result < 1) {
                return 'H';
            } else if (result < 2) {
                return 'ùïè';
            } else {
                return '+';
            }
        }

        rollQuantumDie();
    </script>
</body>
</html>
